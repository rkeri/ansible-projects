---
- name:           httpd install
  hosts:          all
  gather_facts:   true
  become:         true

  tasks:

    - name:       "Installing httpd"
      yum:        name=httpd state=latest

    - name:       "Add httpd to startup"
      systemd:
        name:     httpd
        enabled:  yes
        masked:   no

    - name:       "Start httpd"
      systemd:
        state:    started
        name:     httpd

- name:                  MariaDB install
  hosts:                 all
  gather_facts:          true
  become:                true
  vars_files:
    - vars/dbdefault.yml

  tasks:

    - name:              Install prerequisities
      yum:
        name:            "{{ dbpacks }}"
      vars:
        dbpacks:
         - mariadb-server
         - MySQL-python

    - name:              Start MariaDB
      service:           name=mariadb state=started

    - name:              Set bind address for remote access
      template:
        src:             "files/mariadb-bind-cnf.j2"
        dest:            "/etc/my.cnf.d/server.cnf"

    - name:              Is root password set?
      command:           mysql -u root --execute "SELECT NOW()"
      register:          is_root_password_set
      ignore_errors:     yes

    - name:              Set root password
      mysql_user:        user=root password="{{ mariadb_root_pw }}" host=localhost
      when:              is_root_password_set.rc == 0

    - name:              Inform user of mysql root password
      debug:
        msg:             "MariaDB root password was set to {{ mariadb_root_pw }}"
      when:              is_root_password_set.rc == 0

    - name:              Create database for wordpress
      mysql_db:
        name:            "{{ db_name }}"
        login_user:      root
        login_password:  "{{ mariadb_root_pw }}"
        login_host:      localhost
        state:           present

    - name:              Create local user for the wordpress DB
      mysql_user:
        name:            "{{ db_user }}"
        password:        "{{ db_user_pw }}"
        # priv:          '{{ db_name }}.*:ALL,GRANT'
        priv:            '*.*:ALL,GRANT'
        login_user:      root
        login_password:  "{{ mariadb_root_pw }}"
        state:           present

    - name:              Create remote user for the wordpress DB
      mysql_user:
        name:            "{{ db_user }}"
        host:            "{{ webserver_ip }}"
        password:        "{{ db_user_pw }}"
        # priv:          '{{ db_name }}.*:ALL,GRANT'
        priv:            '*.*:ALL,GRANT'
        login_user:      root
        login_password:  "{{ mariadb_root_pw }}"
        state:           present

    - set_fact:
        mysqld_content:  "{{ lookup('template', 'files/my.cnf.j2') }}"

    - name:             Add packet/query/logfile size to my.cnf
      blockinfile:
        path:           "/etc/my.cnf"
        backup:         yes
        content:        '{{ mysqld_content }}'
        state:          present

    - name:              Add mariaDB to system startup
      systemd:
        name:            mariadb
        enabled:         yes
        masked:          no

    - name:              Restart mariadb
      service:
        name:            mariadb
        state:           restarted

- name:          Install OTRS
  hosts:         all
  gather_facts:  true
  become:        true

  tasks:

    - name:      "Install prereq (epel, wget)"
      yum:
        name:    "{{ prereq }}"
        state:   latest
      vars:
        prereq:
         - epel-release
         - wget

    - name:      "Install perl modules"
      command:   "yum install bash-completion "perl(Archive::Zip)" "perl(Crypt::SSLeay)" "perl(IO::Socket::SSL)" "perl(LWP::UserAgent)" "perl(Net::DNS)" "perl(Net::LDAP)" "perl(Template)" "perl(XML::LibXML)" "perl(XML::LibXSLT)" "perl(XML::Parser)" "perl(YAML::XS)" "perl(YAML::XS)" "perl(Authen::NTLM)" "perl(Mail::IMAPClient)" "perl(JSON::XS)" "perl(Encode::HanExtra)"  "perl(DBD::Pg)" "perl(Crypt::Eksblowfish::Bcrypt)" perl-core procmail -y"

    - name:      "Download & install OTRS distro"
      yum:       name=http://ftp.otrs.org/pub/otrs//RPMS/rhel/7/otrs-6.0.26-01.noarch.rpm

    # - name:    "Download OTRS distro"
    #   get_url:
    #     url:   http://ftp.otrs.org/pub/otrs//RPMS/rhel/7/otrs-6.0.26-01.noarch.rpm
    #     dest:  /tmp/otrs-6.0.26-01.noarch.rpm
    #     mode:  '0440'
    #
    # - name:    "Install OTRS"
    #   yum:
    #      name: /tmp/otrs-6.0.26-01.noarch.rpm
    #      state: present

    - name:      "Check missing modules"
      command:   "/opt/otrs/bin/otrs.CheckModules.pl"

    - name:      "Copy OTRS default config file & add db settings"
      template:
        src:            "files/config.pm.j2"
        dest:           "/opt/otrs/Kernel/Config.pm"

    - set_fact:
        mysql_otrs_content:  "{{ lookup('template', 'files/startup-mysql.j2') }}"

    - name:             "Enable mySQL on apache2-perl-startup.pl"
      blockinfile:
        path:           "/opt/otrs/scripts/apache2-perl-startup.pl"
        backup:         yes
        content:        '{{ mysql_otrs_content }}'
        state:          present

    - name:             "Restart httpd"
      service:
        name:           httpd
        state:          restarted

    - name:             "Add firewall rule on http for external connections"
      firewalld:
        zone:           public
        service:        http
        permanent:      yes
        state:          enabled

    - name:             "reload firewall"
      service:
        name:           firewalld
        state:          reloaded

    - name:             "start OTRS daemon"
      command:          "su - otrs -c "/opt/otrs/bin/otrs.Daemon.pl start""

    - name:             "activate OTRS cronjob"
      command:          "su - otrs -c "/opt/otrs/bin/Cron.sh start""
