############################################
# LAMP + WP + DB playbook for CentOS by rk #
############################################
---
- name:          Apache configuration
  hosts:         {{ apache_host }}
  become:        true
  vars_files:
    - vars/lampwpdbdefault.yml
  gather_facts:  no
  tasks:

    - name:             Install httpd
      yum:              name=httpd state=latest

    - name:             Create document root
      file:
        path:           "/var/www/{{ http_host }}"
        state:          directory
        owner:          "{{ app_user }}"
        mode:           '0755'

    - name:             Copy index test page
      template:
        src:            "files/index.html.j2"
        dest:           "/var/www/{{ http_host }}/index.html"

    - name:             Set up Apache virtualhost
      template:
        src:            "files/apache.conf.j2"
        dest:           "/etc/httpd/conf/{{ http_conf }}"

    - set_fact:
        httpd_content:  "{{ lookup('template', 'files/apache.conf.j2') }}"

    - name:             Add virtualhost to httpd.conf
      blockinfile:
        path:           "/etc/httpd/conf/httpd.conf"
        backup:         yes
        content:        '{{ httpd_content }}'
        state:          present

    - name:             "Firewall rule on on http for external connections"
      firewalld:
        zone:           public
        service:        http
        permanent:      yes
        state:          enabled

    - name:             Configure Apache for external access
      shell:
        cmd:            setsebool -P httpd_can_network_connect 1

    - name:             restarting firewall
      service:
        name:           firewalld
        state:          reloaded

    - name:             restarting apache
      service:
        name:           httpd
        state:          restarted

  when:          {{ install_apache == true }}

- name:          Wordpress configuration
  hosts:         {{ wp_host }}
  become:        true
  vars_files:
    - vars/lampwpdbdefault.yml
  gather_facts:  no
  tasks:

    - name:          Install prereq
      yum:           name=yum-utils state=latest

    - name:          Install mariadb packages
      yum:
        name:        "{{ dbpacks }}"
        state:       latest
      vars:
        dbpacks:
         - mariadb-server

    - name:          Install php prereq
      yum:
        name:        "{{ phppacks }}"
        state:       latest
      vars:
        phppacks:
        - epel-release
        - yum-utils

    - name:          Install wget
      yum:           name=wget state=latest

    - name:          Install release
      yum:           name=http://rpms.remirepo.net/enterprise/remi-release-7.rpm

    - name:          Configure php
      shell:
        cmd:         yum-config-manager --enable remi-php73

    - name:          Install php common modules
      yum:
        name:        "{{ phpmodules }}"
        state:       latest
      vars:
        phpmodules:
          - php
          - php-common
          - php-opcache
          - php-mcrypt
          - php-cli
          - php-gd
          - php-curl
          - php-mysql

    - name:          Extract wordpress TEST
      unarchive:
        src:         http://wordpress.org/latest.tar.gz
        dest:        /tmp/
        remote_src:  yes

    - name:          Clear yourhost contents IF exists
      file:
        state:       absent
        path:        /var/www/{{ http_host }}

    - name:          Copy wordpress to www/yourhost/
      copy:
        src:         /tmp/wordpress/
        dest:        /var/www/{{ http_host }}
        remote_src:  yes

    - name:          Create wp upload Directory
      file:
        path:        /var/www/{{ http_host }}/wp-content/uploads
        state:       directory
        owner:       apache
        group:       apache
        mode:        '0755'

    - name:          Create wp-config from sample
      template:
        src:         "files/wp-config-sample.j2"
        dest:        "/var/www/{{ http_host }}/wp-config.php"

    - name:          restarting apache
      service:
        name:        httpd
        state:       restarted

  when:          {{ install_wp == true }}

- name:          MariaDB configuration
  hosts:         {{ mariadb_host }}
  become:        true
  vars_files:
    - vars/lampwpdbdefault.yml
  gather_facts:  no
  tasks:

    - name:              Install prerequisities
      yum:
        name:            "{{ dbpacks }}"
      vars:
        dbpacks:
         - mariadb-server
         - MySQL-python

    - name:              Start MariaDB
      service:           name=mariadb state=started

    - name:              Set bind address for remote access
      template:
        src:             "files/mariadb-bind-cnf.j2"
        dest:            "/etc/my.cnf.d/server.cnf"

    - name:              Is root password set?
      command:           mysql -u root --execute "SELECT NOW()"
      register:          is_root_password_set
      ignore_errors:     yes

    - name:              Set root password
      mysql_user:        user=root password="{{ mariadb_root_pw }}" host=localhost
      when:              is_root_password_set.rc == 0

    - name:              Inform user of mysql root password
      debug:
        msg:             "MariaDB root password was set to {{ mariadb_root_pw }}"
      when:              is_root_password_set.rc == 0

    - name:              Create database for wordpress
      mysql_db:
        name:            "{{ db_name }}"
        login_user:      root
        login_password:  "{{ mariadb_root_pw }}"
        login_host:      localhost
        state:           present

    - name:              Create local user for the wordpress DB
      mysql_user:
        name:            "{{ db_user }}"
        password:        "{{ db_user_pw }}"
        # priv:          '{{ db_name }}.*:ALL,GRANT'
        priv:            '*.*:ALL,GRANT'
        login_user:      root
        login_password:  "{{ mariadb_root_pw }}"
        state:           present

    - name:              Create remote user for the wordpress DB
      mysql_user:
        name:            "{{ db_user }}"
        host:            "{{ webserver_ip }}"
        password:        "{{ db_user_pw }}"
        # priv:          '{{ db_name }}.*:ALL,GRANT'
        priv:            '*.*:ALL,GRANT'
        login_user:      root
        login_password:  "{{ mariadb_root_pw }}"
        state:           present

    - name:              Restart mariadb
      service:
        name:            mariadb
        state:           restarted

  when:          {{ install_mariadb == true }}
